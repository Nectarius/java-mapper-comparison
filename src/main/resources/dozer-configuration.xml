<?xml version="1.0" encoding="UTF-8"?>
<mappings xmlns="http://dozer.sourceforge.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://dozer.sourceforge.net http://dozer.sourceforge.net/schema/beanmapping.xsd">

    <configuration>
        <date-format>yyyy-MM-dd</date-format>
        <custom-converters> <!-- these are always bi-directional -->
            <converter type="tea.dozer.converters.GreenTeaConverter">
                <class-a>tea.domain.GreenTea</class-a>
                <class-b>view.GreenTeaView</class-b>
            </converter>
        </custom-converters>
    </configuration>

    <mapping type="one-way">
        <class-a>tea.domain.WhiteTea</class-a>
        <class-b>view.WhiteTeaView
        </class-b>

        <field custom-converter-param="White Peony" custom-converter="tea.dozer.converters.ConstantsCustomConverter">
            <a>content</a>
            <b>variety</b>
        </field>

    </mapping>

    <mapping type="one-way" map-id="for-employee">
        <class-a>tea.domain.BlackTea</class-a>
        <class-b>view.BlackTeaView</class-b>
        <field custom-converter="tea.dozer.EmployeeUserCustomConverter" custom-converter-param="Unknown user">
            <a>registeredBy</a>
            <b>registeredBy</b>
        </field>
    </mapping>

    <mapping>
        <class-a>tea.domain.YellowTea</class-a>
        <class-b>view.YellowTeaView</class-b>
        <field>
            <a key="primaryProperties" map-get-method="get" set-method="addPropValue">propValues</a>
            <b>primaryProperties</b>
        </field>
        <field>
            <a key="secondaryProperties" map-get-method="get" set-method="addPropValue">propValues</a>
            <b>secondaryProperties</b>
        </field>
    </mapping>

    <mapping type="one-way" map-id="for-customer">
        <class-a>tea.domain.BlackTea</class-a>
        <class-b>view.BlackTeaView</class-b>
        <field-exclude>
            <a>registeredBy</a>
            <b>registeredBy</b>
        </field-exclude>
    </mapping>

    <!-- Dozer doesnt really support mapping multiple fields into a single field as in your use case.
One thing you may want to consider(if possible)
 is to wrap the 3 fields in a custom container type of object.
  If you have control over your legacy data, you could create a type to wrap the individual date fields:
  If you don't have control over your legacy data then I believe you'd have to write a custom mapper to map MyObject to MyOtherObject-->

    <!--    <mapping type="one-way">
            <class-a>tea.domain.GreenTea</class-a>
            <class-b>view.GreenTeaView</class-b>
            <field custom-converter="tea.dozer.EmployeeUserCustomConverter" custom-converter-param="Unknown user">
                <a>registeredBy</a>
                <b>registeredBy</b>
            </field>
        </mapping>-->


</mappings>